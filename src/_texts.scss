// Mixins
@import 'util';

// Display Pic
@mixin dp($side: null, $image) {
  &::#{$side} {
    content: '';
    display: inline-block;
    margin: 1rem 0;
    width: 75px;
    height: 75px;
    border-radius: 50%;
    background-color: #333;
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    border: 1px solid #C8CDD0;
    background-image: url(../img/#{$image}.jpg);

    @media #{$xxs-break} {
      width: 45px;
      height: 45px;
    }
  }
}

// Time Stamp
@mixin timestamp($convo, $msg, $side, $time) {
  // Convo is letter
  // Msg is number within convo
  // Name is a string (asami or korra)
  // Time is a string

  ##{$convo}-msg-#{$msg}::#{$side} {
    @if($side == after) {
      content: 'Asami // #{$time}';
    } 
    @else {
      content: 'Korra // #{$time}';
    }
  }
}

// Time Stamp Style 
@mixin timestamp-style {
  position: absolute;
  color: #fff;
  text-transform: uppercase;
  font-size: .75rem;
  bottom: -.5rem;
  opacity: .5;
}

.scene {

  .frame {
    width: 100%;
    height: 650px;
    // backdrop-filter: blur(5px);
    flex: 1 1 auto;
    display: flex;
    justify-content: center;
    align-items: center;

    @media #{$md-break} {
      justify-content: flex-end;
    }
  }

}

.msg {
  &-container {
    width: 500px;
    background: none;
    box-shadow: none;
    padding: 1rem;
    overflow: hidden;

    @media #{$xs-break} {
      width: 100%;
      margin: auto;
      padding: 0;
    }
  }

  &-content {
    height: 650px;
    position: relative;
  }

  &-text {
    display: flex;
    align-items: flex-start;
    position: absolute;
    animation-iteration-count: infinite;
    animation-fill-mode: forwards;

    span {
      //display: block;
      padding: 1rem;
      border-radius: .75rem;
      margin: 1rem .5rem;
      line-height: 1.5; 
      min-height: 75px;
      max-width: 275px;
      flex: 1;

      @include box-shadow();

      @media #{$xs-break} {
        font-size: 14px;
      }
    }

    img {
      // object-fit: cover;
      // height: 300px;
      width: 100%;
    }

  }

  &-send {
    justify-content: flex-end;
    margin-right: 2rem;

    @media #{$xxs-break} {
      margin-right: 1rem;
    }

    span {
      background-color: $accent;
      color: $l-gray;
    }
    
    @include dp(after, k);

    
    &::before {
      @include timestamp-style();
      left: 1rem;
    }
  }

  &-receive {
    span {
      background-color: $l-gray;
    }

    @include dp(before, a);

    &::after {
      @include timestamp-style();
      right: 1rem;
    }
  }

}

// ---------- CONVERSATIONS ---------- //

// Common Variables

$thread-height: 550px;
$msg-spacing: 1.5em;
$msg-clearance: 100px;


// CONVERSATION A ------------------- //

.conversation-a {
  @include timestamp(a, '1', after, '8:12 PM');
  @include timestamp(a, '2', after, '8:13 PM');
  @include timestamp(a, '3', before, '8:17 PM');

  .msg-text {
    animation-duration: 15s; // need to be adjustable
  }
}

// Key maps per convo
// Prefix keyframe names
// messages mapped to animation keyframe
$conversation-a: (
  1: a-msg-1,
  2: a-msg-2,
  3: a-msg-3,
);

.play {
  @each $msg, $animation in $conversation-a {
    #a-msg-#{$msg} { animation-name: $animation;}
   }
}

// Msg Heights
$a-msg-1h: 110px;
$a-msg-2h: 347px;
$a-msg-3h: 110px;

@keyframes a-msg-1 {
  0% { 
    //Starting Point: Height of container minus height of msg1
    top: calc(#{$thread-height} - #{$a-msg-1h});
    left: -4em;
    transform: scale(0);
  }
  2% {
    // Enter msg1 (off screen zoom)
    // +2
    top: calc(#{$thread-height} - #{$a-msg-1h});
    left: 0;
    transform: scale(1);
  }
  6% {
    // Pause
    top: calc(#{$thread-height} - #{$a-msg-1h});
  }
  8% {
    // Move msg1 up to make room for msg2: Height of container minus both msg
    // +2
    top: calc(#{$thread-height} - #{$a-msg-1h} - #{ $a-msg-2h});
  }
  30% {
    // Pause
    // +2
    top: calc(#{$thread-height} - #{$a-msg-1h} - #{ $a-msg-2h});
  }
  
  32% {
    // End point: Top
    top: 0;
    left: 0;
  }
}

@keyframes a-msg-2 {
  0% {
    //Starting Point: Same as msg1
    top: calc(#{$thread-height} - #{$a-msg-1h} + #{$msg-spacing});
    left: -4em;
    transform: scale(0);
  }
  6% {
    // Pause: Wait for msg1 to move up
    top: calc(#{$thread-height} - #{$a-msg-1h} + #{$msg-spacing});
    left: -4em;
    transform: scale(0);
  }
  
  8% {
    // Enter msg2: Position height - height of msg2, off screen zoom
    // +2
    top: calc(#{$thread-height} - #{ $a-msg-2h} + #{$msg-spacing});
    left: 0;
    transform: scale(1);
  }

  30% {
    // Pause
    top: calc(#{$thread-height} - #{ $a-msg-2h} + #{$msg-spacing});
    // +2
  }

  32% {
    // End point: Container height minus preceding messages
    top: calc(#{$a-msg-1h} + #{$msg-spacing});
  }
  100% {
    // Wait
    top: calc(#{$a-msg-1h} + #{$msg-spacing});
  }
}

@keyframes a-msg-3 {
  0% {
    //Starting Point: Same as msg1
    top: calc(#{$thread-height} - #{$a-msg-1h} + #{$msg-spacing});
    right: -4em;
    transform: scale(0);
  }
  30% {
    // Wait for other messages
    top: calc(#{$thread-height} - #{$a-msg-1h} + #{$msg-spacing});
    right: -4em;
    transform: scale(0);
  }
  
  32% {
    // Enter msg2: Position height - height of msg2, off screen zoom
    // Also End Point, +2
    top: calc(#{$a-msg-1h} + #{$a-msg-2h} + #{$msg-spacing} + #{$msg-spacing});
    right: 0;
    transform: scale(1);
  }

  100% {
    // Wait for rest of animation
    top: calc(#{$a-msg-1h} + #{$a-msg-2h} + #{$msg-spacing} + #{$msg-spacing});
    right: 0;
    transform: scale(1);
  }

}


@media #{$xxs-break} {
  $a-msg-2h: 318px;

  @keyframes a-msg-3 {
    0% {
      //Starting Point: Same as msg1
      top: calc(#{$thread-height} - #{$a-msg-1h} + #{$msg-spacing});
      right: -4em;
      transform: scale(0);
    }
    30% {
      // Wait for other messages
      top: calc(#{$thread-height} - #{$a-msg-1h} + #{$msg-spacing});
      right: -4em;
      transform: scale(0);
    }
    
    32% {
      // Enter msg2: Position height - height of msg2, off screen zoom
      // Also End Point, +2
      top: calc(#{$a-msg-1h} + #{$a-msg-2h} + #{$msg-spacing} + #{$msg-spacing});
      right: 0;
      transform: scale(1);
    }
  
    100% {
      // Wait for rest of animation
      top: calc(#{$a-msg-1h} + #{$a-msg-2h} + #{$msg-spacing} + #{$msg-spacing});
      right: 0;
      transform: scale(1);
    }
  
  }
}



// CONVERSATION B ------------------- //

.conversation-b {
  @include timestamp(b, '1', after, '10:00 AM');
  @include timestamp(b, '2', after, '10:02 AM');
  @include timestamp(b, '3', before, '10:15 AM');

  .msg-text {
    animation-duration: 25s; // need to be adjustable
  }
}

// Key maps per convo
// Prefix keyframe names
// messages mapped to animation keyframe
$conversation-b: (
  1: b-msg-1,
  2: b-msg-2,
  3: b-msg-3,
);

.play {
  @each $msg, $animation in $conversation-b {
    #b-msg-#{$msg} { animation-name: $animation;}
   }
}

// Msg Heights
$b-msg-1h: 410px;
$b-msg-2h: 389px;
$b-msg-3h: 148px;

@keyframes b-msg-1 {
  0% { 
    //Starting Point: Height of container minus height of msg1
    top: calc(#{$thread-height} + #{$msg-clearance});
    left: -4em;
    transform: scale(0);
  }
  2% {
    // Enter msg1 (off screen zoom)
    // +2
    top: calc(#{$thread-height} - #{$b-msg-1h} + #{$msg-clearance} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing});
    left: 0;
    transform: scale(1);
  }
  15% {
    // Pause
    top: calc(#{$thread-height} - #{$b-msg-1h} + #{$msg-clearance} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing});
  }
  17% {
    // Move msg1 up to make room for msg2: Height of container minus both msg
    // +2
    top: calc(#{$thread-height} - #{$b-msg-1h} + #{$msg-clearance} - #{ $b-msg-2h} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing});
  }
  40% {
    // Pause
    // +2
    top: calc(#{$thread-height} - #{$b-msg-1h} + #{$msg-clearance} - #{ $b-msg-2h} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing});
  }
  
  42% {
    // End point: Top 
    top:calc(#{$thread-height} - #{$b-msg-1h} + #{$msg-clearance} - #{ $b-msg-2h} - #{ $b-msg-3h} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing}); // Off screen
    left: 0;
  }
  100% {
    // End point: Top 
    top:calc(#{$thread-height} - #{$b-msg-1h} + #{$msg-clearance} - #{ $b-msg-2h} - #{ $b-msg-3h} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing}); // Off screen
    left: 0;
  }
}

@keyframes b-msg-2 {
  0% { 
    //Starting Point: Height of container minus height of msg1
    top: calc(#{$thread-height} + #{$msg-clearance});
    left: -4em;
    transform: scale(0);
  }
  15% {
    // Enter msg1 (off screen zoom)
    // +2
    top: calc(#{$thread-height} + #{$msg-clearance});
    left: 0;
    transform: scale(1);
  }
  17% {
    // Move msg1 up to make room for msg2: Height of container minus both msg
    // +2
    top: calc(#{$thread-height} - #{$b-msg-2h} + #{$msg-clearance} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing});
  }
  40% {
    // Pause
    // +2
    top: calc(#{$thread-height} - #{$b-msg-2h} + #{$msg-clearance} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing});
  }
  
  42% {
    // End point: Top 
    top: calc(#{$thread-height} - #{$b-msg-2h} + #{$msg-clearance} - #{ $b-msg-3h} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing}); // Off screen
    left: 0;
  }
  100% {
    // End point: Top 
    top: calc(#{$thread-height} - #{$b-msg-2h} + #{$msg-clearance} - #{ $b-msg-3h} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing}); // Off screen
    left: 0;
  }
}

@keyframes b-msg-3 {
  0% { 
    //Starting Point: Height of container minus height of msg1
    top: calc(#{$thread-height} + #{$msg-clearance});
    right: -4em;
    transform: scale(0);
  }
  40% {
    // Enter msg1 (off screen zoom)
    // +2
    top: calc(#{$thread-height} + #{$msg-clearance});
  }
  42% {
    // Move msg1 up to make room for msg2: Height of container minus both msg
    // +2
    top: calc(#{$thread-height} - #{$b-msg-3h} + #{$msg-clearance} - #{$msg-spacing} - #{$msg-spacing});
    right: 0;
    transform: scale(1);
  }
  100% {
    // End point: Top 
    top: calc(#{$thread-height} - #{$b-msg-3h} + #{$msg-clearance} - #{$msg-spacing} - #{$msg-spacing}); // Off screen
    right: 0;
  }
}

@media #{$xxs-break} {
  $b-msg-1h: 381px;
  $b-msg-2h: 360px;
  $b-msg-3h: 169px;

  @keyframes b-msg-1 {
    0% { 
      //Starting Point: Height of container minus height of msg1
      top: calc(#{$thread-height} + #{$msg-clearance});
      left: -4em;
      transform: scale(0);
    }
    2% {
      // Enter msg1 (off screen zoom)
      // +2
      top: calc(#{$thread-height} - #{$b-msg-1h} + #{$msg-clearance} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing});
      left: 0;
      transform: scale(1);
    }
    15% {
      // Pause
      top: calc(#{$thread-height} - #{$b-msg-1h} + #{$msg-clearance} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing});
    }
    17% {
      // Move msg1 up to make room for msg2: Height of container minus both msg
      // +2
      top: calc(#{$thread-height} - #{$b-msg-1h} + #{$msg-clearance} - #{ $b-msg-2h} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing});
    }
    40% {
      // Pause
      // +2
      top: calc(#{$thread-height} - #{$b-msg-1h} + #{$msg-clearance} - #{ $b-msg-2h} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing});
    }
    
    42% {
      // End point: Top 
      top:calc(#{$thread-height} - #{$b-msg-1h} + #{$msg-clearance} - #{ $b-msg-2h} - #{ $b-msg-3h} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing}); // Off screen
      left: 0;
    }
    100% {
      // End point: Top 
      top:calc(#{$thread-height} - #{$b-msg-1h} + #{$msg-clearance} - #{ $b-msg-2h} - #{ $b-msg-3h} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing}); // Off screen
      left: 0;
    }
  }

  @keyframes b-msg-2 {
    0% { 
      //Starting Point: Height of container minus height of msg1
      top: calc(#{$thread-height} + #{$msg-clearance});
      left: -4em;
      transform: scale(0);
    }
    15% {
      // Enter msg1 (off screen zoom)
      // +2
      top: calc(#{$thread-height} + #{$msg-clearance});
      left: 0;
      transform: scale(1);
    }
    17% {
      // Move msg1 up to make room for msg2: Height of container minus both msg
      // +2
      top: calc(#{$thread-height} - #{$b-msg-2h} + #{$msg-clearance} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing});
    }
    40% {
      // Pause
      // +2
      top: calc(#{$thread-height} - #{$b-msg-2h} + #{$msg-clearance} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing});
    }
    
    42% {
      // End point: Top 
      top: calc(#{$thread-height} - #{$b-msg-2h} + #{$msg-clearance} - #{ $b-msg-3h} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing}); // Off screen
      left: 0;
    }
    100% {
      // End point: Top 
      top: calc(#{$thread-height} - #{$b-msg-2h} + #{$msg-clearance} - #{ $b-msg-3h} - #{$msg-spacing} - #{$msg-spacing} - #{$msg-spacing}); // Off screen
      left: 0;
    }
  }

  @keyframes b-msg-3 {
    0% { 
      //Starting Point: Height of container minus height of msg1
      top: calc(#{$thread-height} + #{$msg-clearance});
      right: -4em;
      transform: scale(0);
    }
    40% {
      // Enter msg1 (off screen zoom)
      // +2
      top: calc(#{$thread-height} + #{$msg-clearance});
    }
    42% {
      // Move msg1 up to make room for msg2: Height of container minus both msg
      // +2
      top: calc(#{$thread-height} - #{$b-msg-3h} + #{$msg-clearance} - #{$msg-spacing} - #{$msg-spacing});
      right: 0;
      transform: scale(1);
    }
    100% {
      // End point: Top 
      top: calc(#{$thread-height} - #{$b-msg-3h} + #{$msg-clearance} - #{$msg-spacing} - #{$msg-spacing}); // Off screen
      right: 0;
    }
  }
}